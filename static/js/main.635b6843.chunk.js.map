{"version":3,"sources":["components/Users/Users.module.css","constants/constants.js","reportWebVitals.js","api/api.js","api/auth-api.js","redux/auth-reducer.js","api/users-api.js","redux/users-reducer.js","redux/redux-store.js","components/Users/Users.js","components/LoginPage/LoginPage.js","App.js","index.js","components/LoginPage/LoginPage.module.css"],"names":["module","exports","sortOptions","increaseId","decreaseId","filterOptions","username","id","requiredField","defaultAvatarSrc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","API_TOKEN_AUTH","authToken","password","dispatch","post","res","localStorage","setItem","data","token","type","payload","initialState","isAuth","usersAPI","getToken","getItem","method","url","headers","Authorization","accept","catch","error","console","log","SET_USERS","CHANGE_USERS_ARRAY","initialValues","users","filterUsers","filter","filterType","sortType","usersRequest","a","rootReducer","combineReducers","auth","state","action","usersPage","usersArray","filteredUsers","length","x","includes","toString","indexOf","slice","sort","b","store","createStore","applyMiddleware","thunkMiddleware","Users","submit","values","setSubmitting","props","filterOption","sortOption","this","Row","className","styles","usersFilterForm","Col","sm","md","lg","usersFilterFormColumn","enableReinitialize","onSubmit","handleChange","handleBlur","handleSubmit","isSubmitting","Form","usersFilterGroup","as","name","hidden","value","placeholder","onChange","onBlur","Button","disabled","map","user","Container","usersContainer","customer","xs","src","images","alt","customerImageName","customerInfo","first_name","last_name","is_active","active","notActive","size","style","is_superuser","superUser","Component","connect","bindActionCreators","validationSchema","Yup","required","min","to","isFetching","errors","touched","Group","Label","errorText","App","exact","path","render","AppContainerWrap","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.635b6843.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"Users_images__1jz2J\",\"customer\":\"Users_customer__15DTh\",\"customerImageName\":\"Users_customerImageName__3sQKS\",\"active\":\"Users_active__3EToL\",\"notActive\":\"Users_notActive__2f5Ry\",\"activeStatus\":\"Users_activeStatus__2Ye1Q\",\"customerInfo\":\"Users_customerInfo__PsXn6\",\"superUser\":\"Users_superUser__Oitlh\",\"usersFilterForm\":\"Users_usersFilterForm__2-eam\",\"usersFilterFormColumn\":\"Users_usersFilterFormColumn__kKwh4\",\"usersFilterFormLabel\":\"Users_usersFilterFormLabel__HtrJ9\",\"usersFilterGroup\":\"Users_usersFilterGroup__3GI8-\",\"filtersLabel\":\"Users_filtersLabel__2Tzua\"};","module.exports = {\r\n    sortOptions: {\r\n        increaseId: 'increase',\r\n        decreaseId: 'increase'\r\n    },\r\n    filterOptions: {\r\n        username: 'username',\r\n        id: 'ID'\r\n    },\r\n    requiredField: 'Field is required',\r\n    defaultAvatarSrc: 'https://www.w3schools.com/howto/img_avatar.png'\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://fathomless-ocean-00302.herokuapp.com/http://emphasoft-test-assignment.herokuapp.com/',\r\n})","import {instance} from './api'\r\n\r\nexport const API_TOKEN_AUTH = 'API_TOKEN_AUTH'\r\n\r\nexport const authToken = (username, password) => {\r\n    return (dispatch) => {instance.post(`api-token-auth/`, {username, password})\r\n        .then((res) => {localStorage.setItem('Token', res.data.token)\r\n                        dispatch({type: API_TOKEN_AUTH, payload: res.data})\r\n        })}\r\n}\r\n\r\n","import {API_TOKEN_AUTH} from \"../api/auth-api\";\r\n\r\nconst initialState = {\r\n    token: '',\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case API_TOKEN_AUTH:\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                isAuth: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {instance} from \"./api\";\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(token) {\r\n        const getToken = !!token ? token : localStorage.getItem('Token')\r\n        return instance({\r\n            method: 'get',\r\n            url: 'api/v1/users/',\r\n            headers: {Authorization: `Token ${getToken}`, accept: \"application/json\"}\r\n        }).then(res => res.data).catch(error => console.log(error))\r\n        }\r\n}","import {usersAPI} from \"../api/users-api\"\r\nimport {sortOptions, filterOptions} from \"../constants/constants\";\r\n\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const CHANGE_USERS_ARRAY = 'CHANGE_USERS_ARRAY'\r\n\r\nconst initialValues = {\r\n    users: []\r\n}\r\n\r\nexport const usersReducer = (state = initialValues, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return  {\r\n            ...state,\r\n            usersArray: action.users,\r\n            users: action.users\r\n        };\r\n        case CHANGE_USERS_ARRAY:\r\n            let filteredUsers = state.users\r\n            if(action.filter.length > 0 ) {\r\n                if(action.filterType === filterOptions.username) {\r\n                    filteredUsers = state.users.filter(x => x.username.includes(action.filter))\r\n                } else if(action.filterType === filterOptions.id) {\r\n                    filteredUsers = state.users.filter(x => x.id.toString().indexOf(action.filter.toString()) > -1)\r\n                }\r\n            }\r\n            if(action.sortType === sortOptions.increaseId) {\r\n                filteredUsers = filteredUsers.slice().sort((a, b)=>{\r\n                    return a.id - b.id\r\n                })\r\n            } else if(action.sortType === sortOptions.decreaseId) {\r\n                filteredUsers = filteredUsers.slice().sort((a, b)=>{\r\n                    return b.id - a.id\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                usersArray: filteredUsers\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS, users\r\n})\r\n\r\nexport const filterUsers = (filter, filterType, sortType) => ({\r\n    type: CHANGE_USERS_ARRAY, filter, filterType, sortType\r\n})\r\n\r\nexport const usersRequest = (token) => async (dispatch) => {\r\n    let data = await usersAPI.getUsers(token)\r\n    dispatch(setUsers(data))\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {usersReducer} from \"./users-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    usersPage: usersReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport {filterUsers, usersRequest} from \"../../redux/users-reducer\"\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport styles from './Users.module.css'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport {Field, Formik} from \"formik\"\r\nimport {bindActionCreators} from \"redux\";\r\nimport {filterOptions, sortOptions, defaultAvatarSrc} from \"../../constants/constants\";\r\n\r\nclass Users extends Component {\r\n    componentDidMount() {\r\n        this.props.usersRequest(this.props.token)\r\n    }\r\n\r\n    submit = (values, {setSubmitting}) => {\r\n        this.props.filterUsers(values.filter, values.filterOption, values.sortOption)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    render() {\r\n        const {users} = this.props\r\n\r\n        return <div>\r\n            <Row className={styles.usersFilterForm}>\r\n                <Col sm=\"auto\" md=\"auto\" lg=\"auto\" className={styles.usersFilterFormColumn}>\r\n                    <Formik enableReinitialize\r\n                            initialValues={{filter: ''}}\r\n                            onSubmit={this.submit}>\r\n                        {({\r\n                              values, handleChange, handleBlur,\r\n                              handleSubmit, isSubmitting\r\n                          }) => (\r\n                            <Form onSubmit={handleSubmit} className={styles.usersFilterGroup}>\r\n                                <Field as=\"select\" className={'form-control'} name=\"filterOption\">\r\n                                    <option hidden>Filter by:</option>\r\n                                    <option value={filterOptions.username}>Username</option>\r\n                                    <option value={filterOptions.id}>Id</option>\r\n                                </Field>\r\n                                <Field type=\"text\"\r\n                                       name=\"filter\"\r\n                                       placeholder=\"Enter filter text\"\r\n                                       className='form-control'\r\n                                       onChange={handleChange}\r\n                                       onBlur={handleBlur}\r\n                                       value={values.filter}/>\r\n                                <Field as=\"select\" className='form-control' name=\"sortOption\">\r\n                                    <option hidden>Sort by:</option>\r\n                                    <option value=\"none\">None</option>\r\n                                    <option value={sortOptions.increaseId}>Increasing Id</option>\r\n                                    <option value={sortOptions.decreaseId}>Decreasing Id</option>\r\n                                </Field>\r\n                                <Button type=\"submit\" disabled={isSubmitting}>Apply</Button>\r\n                            </Form>)}\r\n                    </Formik>\r\n                </Col>\r\n            </Row>\r\n            {!!users && users.map(user =>\r\n                <Container key={user.id} className={styles.usersContainer}>\r\n                    <div className={styles.usersFilterFormColumn}>\r\n                        <Row className={styles.customer} sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n                            <Col className={`shadow p-3 mb-2 bg-light rounded ${styles.usersFilterGroup}`}>\r\n                                <Col xs=\"4\" md=\"auto\" lg=\"auto\">\r\n                                    <img src={defaultAvatarSrc} className={styles.images}\r\n                                         alt={''}/>                                    <div\r\n                                        className={styles.customerImageName}>{!!user.username ? user.username : `No user name`}</div>\r\n                                    <div className={styles.customerImageName}>id: {user.id}</div>\r\n                                </Col>\r\n                                <Col xs=\"auto\" md=\"auto\" lg=\"auto\" className={styles.customerInfo}>\r\n                                    {!!user.first_name ? user.first_name : `No first name`} {!!user.last_name ? user.last_name : `No last name`}\r\n                                    <div className={!!user.is_active ? styles.active : styles.notActive}>\r\n                                        <Icon.CircleFill size={20}\r\n                                                         style={{'padding': '5px'}}/>{!!user.is_active ? 'Online' : 'Offline'}\r\n                                    </div>\r\n                                    <div>\r\n                                        {!!user.is_superuser ? <div className={styles.superUser}>Super user</div> :\r\n                                            <div></div>}\r\n                                    </div>\r\n                                </Col>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </div>\r\n\r\n                </Container>\r\n            )}\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({usersRequest, filterUsers}, dispatch)\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token,\r\n    users: state.usersPage.usersArray\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)\r\n\r\n\r\n\r\n\r\n\r\n","import {Field, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {authToken} from \"../../api/auth-api\";\r\nimport * as Yup from 'yup'\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Button, Col, Container, Row, Form} from \"react-bootstrap\";\r\nimport styles from './LoginPage.module.css'\r\nimport {requiredField} from \"../../constants/constants\";\r\n\r\nconst LoginPage = (props) => {\r\n    const stringMinLength = 5\r\n\r\n    const submit = (values, { setSubmitting }) => {\r\n        props.authToken(values.username, values.password)\r\n        props.isFetching = true\r\n        setSubmitting(false)\r\n    }\r\n    const validationSchema = Yup.object({\r\n        username: Yup.string().required(requiredField).min(stringMinLength, 'This field must include at least ' + stringMinLength + ' character'),\r\n        password: Yup.string().required(requiredField).min(stringMinLength, 'This field must include at least ' + stringMinLength + ' character')\r\n    })\r\n    if(props.isAuth) {\r\n        return <Redirect to='/users'/>\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row style={{'height' : '100vh'}} className={['justify-content-center', 'align-items-center']}>\r\n                <div className=\"shadow p-3 mb-5 bg-white rounded\">\r\n                <Col lg=\"auto\" style={{'textAlign': 'center'}}>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={{ username: '', password: '' }}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={submit}>\r\n                        {({values, errors, touched,\r\n                           handleChange, handleBlur,\r\n                           handleSubmit,  isSubmitting}) => (\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <Field\r\n                                        type=\"username\"\r\n                                        name=\"username\"\r\n                                        className='form-control'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.username}\r\n                                    />\r\n                                </Form.Group>\r\n                                <p className={styles.errorText}>{errors.username && touched.username && errors.username}</p>\r\n                                <Form.Group>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Field\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className='form-control'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password}\r\n                                    />\r\n                                </Form.Group>\r\n                                <p className={styles.errorText}>{errors.password && touched.password && errors.password}</p>\r\n                                <div>\r\n                                    <Button type=\"submit\" disabled={isSubmitting}>\r\n                                        Log In\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Col>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({authToken}, dispatch)\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\r\n","import './App.css'\r\nimport React from 'react'\r\nimport {HashRouter, Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Provider} from \"react-redux\"\r\nimport store from \"./redux/redux-store\"\r\nimport Users from \"./components/Users/Users\"\r\nimport LoginPage from \"./components/LoginPage/LoginPage\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction App() {\r\n return (\r\n     <Switch>\r\n         <Route exact path='/' render={()=> <Redirect to={'/login'}/> }/>\r\n         <Route path='/login' render={()=> <LoginPage/> }/>\r\n         <Route path='/users' render={()=> <Users/>}/>\r\n         <Route path=\"*\" render={() => <div>404 PAGE IS NOT FOUND</div>}/>\r\n     </Switch>\r\n\r\n     )\r\n}\r\n\r\nconst AppContainerWrap = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default AppContainerWrap;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport AppContainerWrap from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContainerWrap />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"LoginPage_errorText__2olkr\"};"],"sourceRoot":""}