{"version":3,"sources":["api/api.js","api/auth-api.js","redux/auth-reducer.js","api/users-api.js","redux/users-reducer.js","redux/redux-store.js","history.js","components/LoginPage/LoginPage.js","redux/users-selectors.js","redux/auth-selectors.js","components/Users/Users.js","components/MainRouter/MainRouter.js","App.js","reportWebVitals.js","index.js","components/LoginPage/LoginPage.module.css","components/Users/Users.module.css","constants/constants.js"],"names":["instance","axios","create","baseURL","API_TOKEN_AUTH","LOG_OUT","TOGGLE_IS_FETCHING","authToken","username","password","dispatch","post","then","res","localStorage","setItem","data","token","type","payload","initialState","isAuth","isFetching","toggleIsFetching","usersAPI","getToken","getItem","method","url","headers","Authorization","accept","catch","error","console","log","SET_USERS","CHANGE_USERS_ARRAY","initialValues","users","usersArray","usersRequest","a","rootReducer","combineReducers","auth","state","action","removeItem","usersPage","filteredUsers","filter","length","filterType","filterOptions","x","includes","id","toString","indexOf","sortType","sortOptions","increaseId","slice","sort","b","decreaseId","store","createStore","applyMiddleware","thunkMiddleware","history","createHashHistory","connect","bindActionCreators","props","validationSchema","Yup","required","requiredField","min","useEffect","push","Container","Row","style","className","Col","lg","enableReinitialize","onSubmit","values","setSubmitting","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Form","Group","Label","name","onChange","onBlur","value","styles","errorText","Button","disabled","Spinner","toggleSpinner","as","animation","size","role","aria-hidden","getUsers","getAuthToken","Users","useSelector","useDispatch","listen","location","usersFilterForm","sm","md","usersFilterFormColumn","filterOption","sortOption","usersFilterGroup","hidden","placeholder","map","user","usersContainer","customer","xs","src","defaultAvatarSrc","images","alt","customerImageName","customerInfo","first_name","last_name","is_active","active","notActive","is_superuser","superUser","verifyToken","exact","path","render","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.58888d29.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://fathomless-ocean-00302.herokuapp.com/http://emphasoft-test-assignment.herokuapp.com',\r\n})","import {instance} from './api'\r\n\r\nexport const API_TOKEN_AUTH = 'API_TOKEN_AUTH'\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\n\r\nexport const authToken = (username, password) => {\r\n    return (dispatch) => {instance.post(`api-token-auth/`, {username, password})\r\n        .then((res) => {localStorage.setItem('Token', res.data.token)\r\n                        dispatch({type: API_TOKEN_AUTH, payload: res.data})\r\n        })}\r\n}\r\n\r\n","import {API_TOKEN_AUTH, LOG_OUT, TOGGLE_IS_FETCHING} from '../api/auth-api'\r\n\r\nconst initialState = {\r\n    token: '',\r\n    isAuth: false,\r\n    isFetching: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case API_TOKEN_AUTH:\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                isAuth: true\r\n            }\r\n        case LOG_OUT:\r\n            localStorage.removeItem('Token')\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                token: ''\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const logOut = () => ({\r\n    type: LOG_OUT\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({\r\n    type: TOGGLE_IS_FETCHING, isFetching\r\n})\r\n\r\n\r\n","import {instance} from './api'\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(token) {\r\n        const getToken = !!token ? token : localStorage.getItem('Token')\r\n        return instance({\r\n            method: 'get',\r\n            url: 'api/v1/users/',\r\n            headers: {Authorization: `Token ${getToken}`, accept: 'application/json'}\r\n        }).then(res => res.data).catch(error => console.log(error))\r\n    }\r\n}","import {usersAPI} from '../api/users-api'\r\nimport {sortOptions, filterOptions} from '../constants/constants'\r\n\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const CHANGE_USERS_ARRAY = 'CHANGE_USERS_ARRAY'\r\n\r\nconst initialValues = {\r\n    users: [],\r\n    usersArray: []\r\n}\r\n\r\nexport const usersReducer = (state = initialValues, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                usersArray: action.users,\r\n                users: action.users\r\n            }\r\n        case CHANGE_USERS_ARRAY:\r\n            let filteredUsers = state.users\r\n            if (action.filter.length > 0) {\r\n                if (action.filterType === filterOptions.username) {\r\n                    filteredUsers = state.users.filter(x => x.username.includes(action.filter))\r\n                } else if (action.filterType === filterOptions.id) {\r\n                    filteredUsers = state.users.filter(x => x.id.toString().indexOf(action.filter.toString()) > -1)\r\n                }\r\n            }\r\n            if (action.sortType === sortOptions.increaseId) {\r\n                filteredUsers = filteredUsers.slice().sort((a, b) => {\r\n                    return a.id - b.id\r\n                })\r\n            } else if (action.sortType === sortOptions.decreaseId) {\r\n                filteredUsers = filteredUsers.slice().sort((a, b) => {\r\n                    return b.id - a.id\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                usersArray: filteredUsers\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS, users\r\n})\r\n\r\nexport const filterUsers = (filter, filterType, sortType) => ({\r\n    type: CHANGE_USERS_ARRAY, filter, filterType, sortType\r\n})\r\n\r\nexport const usersRequest = (token) => async (dispatch) => {\r\n    let data = await usersAPI.getUsers(token)\r\n    dispatch(setUsers(data))\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {authReducer} from './auth-reducer'\r\nimport {usersReducer} from './users-reducer'\r\n\r\nlet rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    usersPage: usersReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import {createHashHistory} from 'history'\r\n\r\nexport const history = createHashHistory()","import {Field, Formik} from 'formik'\r\nimport React, {useEffect} from 'react'\r\nimport {authToken} from '../../api/auth-api'\r\nimport * as Yup from 'yup'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport {Button, Col, Container, Form, Row, Spinner} from 'react-bootstrap'\r\nimport styles from './LoginPage.module.css'\r\nimport {requiredField} from '../../constants/constants'\r\nimport {history} from './../../history'\r\nimport {toggleIsFetching} from '../../redux/auth-reducer'\r\nimport {usersRequest} from '../../redux/users-reducer'\r\n\r\nconst LoginPage = (props) => {\r\n    const stringMinLength = 5\r\n\r\n    const submit = (values, {setSubmitting}) => {\r\n        props.authToken(values.username, values.password)\r\n        props.toggleIsFetching(true)\r\n        setSubmitting(false)\r\n    }\r\n    const validationSchema = Yup.object({\r\n        username: Yup.string().required(requiredField).min(stringMinLength, 'This field must include at least ' + stringMinLength + ' character'),\r\n        password: Yup.string().required(requiredField).min(stringMinLength, 'This field must include at least ' + stringMinLength + ' character')\r\n    })\r\n    useEffect(() => {\r\n        if (props.isAuth) {\r\n            props.usersRequest(props.token)\r\n        }\r\n    }, [props])\r\n\r\n    useEffect(() => {\r\n        if (props.users.length > 0 && props.isAuth)\r\n            history.push('/users')\r\n    }, [props.users, props.isAuth])\r\n    return (\r\n        <Container>\r\n            <Row style={{'height': '100vh'}} className={['justify-content-center', 'align-items-center']}>\r\n                <div className=\"shadow p-3 mb-5 bg-white rounded\">\r\n                    <Col lg=\"auto\" style={{'textAlign': 'center'}}>\r\n                        <Formik\r\n                            enableReinitialize\r\n                            initialValues={{username: '', password: ''}}\r\n                            validationSchema={validationSchema}\r\n                            onSubmit={submit}>\r\n                            {({\r\n                                  values, errors, touched,\r\n                                  handleChange, handleBlur,\r\n                                  handleSubmit, isSubmitting\r\n                              }) => (\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Username</Form.Label>\r\n                                        <Field\r\n                                            type=\"username\"\r\n                                            name=\"username\"\r\n                                            className='form-control'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.username}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <p className={styles.errorText}>{errors.username && touched.username && errors.username}</p>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Field\r\n                                            type=\"password\"\r\n                                            name=\"password\"\r\n                                            className='form-control'\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            value={values.password}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <p className={styles.errorText}>{errors.password && touched.password && errors.password}</p>\r\n                                    <div>\r\n                                        <Button type=\"submit\" disabled={isSubmitting}>\r\n                                            {props.isFetching && <Spinner\r\n                                                className={styles.toggleSpinner}\r\n                                                as=\"span\"\r\n                                                animation=\"border\"\r\n                                                size=\"sm\"\r\n                                                role=\"status\"\r\n                                                aria-hidden=\"true\"\r\n                                            />}\r\n                                            Log In\r\n                                        </Button>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </Col>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({toggleIsFetching, authToken, usersRequest}, dispatch)\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token,\r\n    isAuth: state.auth.isAuth,\r\n    isFetching: state.auth.isFetching,\r\n    users: state.usersPage.users\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\r\n","export const getUsers = (state) => {\r\n    return state.usersPage.usersArray\r\n}","export const getAuthToken = (state) => {\r\n    return state.auth.token ? state.auth.token : localStorage.getItem('Token')\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {filterUsers, usersRequest} from '../../redux/users-reducer'\r\nimport {Button, Col, Container, Form, Row} from 'react-bootstrap'\r\nimport styles from './Users.module.css'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport {Field, Formik} from 'formik'\r\nimport {defaultAvatarSrc, filterOptions, sortOptions} from '../../constants/constants'\r\nimport {logOut, toggleIsFetching} from '../../redux/auth-reducer'\r\nimport {history} from './../../history'\r\nimport {getUsers} from '../../redux/users-selectors'\r\nimport {getAuthToken} from '../../redux/auth-selectors'\r\n\r\n\r\nconst Users = () => {\r\n    let token = useSelector(getAuthToken)\r\n    const users = useSelector(getUsers)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (users.length === 0 && token) {\r\n            dispatch(usersRequest(token))\r\n        }\r\n    }, [token, dispatch, users])\r\n\r\n    useEffect(() => {\r\n        dispatch(toggleIsFetching(false))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        history.listen((location, action) => {\r\n            if (action === 'POP') {\r\n                dispatch(logOut())\r\n            }\r\n        })\r\n    }, [dispatch])\r\n\r\n    const submit = (values, {setSubmitting}) => {\r\n        dispatch(filterUsers(values.filter, values.filterOption, values.sortOption))\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Row className={styles.usersFilterForm}>\r\n            <Col sm=\"auto\" md=\"auto\" lg=\"auto\" className={styles.usersFilterFormColumn}>\r\n                <Formik enableReinitialize\r\n                        initialValues={{filter: ''}}\r\n                        onSubmit={submit}>\r\n                    {({\r\n                          values, handleChange, handleBlur,\r\n                          handleSubmit, isSubmitting\r\n                      }) => (\r\n                        <Form onSubmit={handleSubmit} className={styles.usersFilterGroup}>\r\n                            <Field as=\"select\" className={'form-control'} name=\"filterOption\">\r\n                                <option hidden>Filter by:</option>\r\n                                <option value={filterOptions.username}>Username</option>\r\n                                <option value={filterOptions.id}>Id</option>\r\n                            </Field>\r\n                            <Field type=\"text\"\r\n                                   name=\"filter\"\r\n                                   placeholder=\"Enter filter text\"\r\n                                   className='form-control'\r\n                                   onChange={handleChange}\r\n                                   onBlur={handleBlur}\r\n                                   value={values.filter}/>\r\n                            <Field as=\"select\" className='form-control' name=\"sortOption\">\r\n                                <option hidden>Sort by:</option>\r\n                                <option value=\"none\">None</option>\r\n                                <option value={sortOptions.increaseId}>Increasing Id</option>\r\n                                <option value={sortOptions.decreaseId}>Decreasing Id</option>\r\n                            </Field>\r\n                            <Button type=\"submit\" disabled={isSubmitting}>Apply</Button>\r\n                        </Form>)}\r\n                </Formik>\r\n            </Col>\r\n        </Row>\r\n        {!!users && users.map(user =>\r\n            <Container key={user.id} className={styles.usersContainer}>\r\n                <div className={styles.usersFilterFormColumn}>\r\n                    <Row className={styles.customer} sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n                        <Col className={`shadow p-3 mb-2 bg-light rounded ${styles.usersFilterGroup}`}>\r\n                            <Col xs=\"4\" md=\"auto\" lg=\"auto\">\r\n                                <img src={defaultAvatarSrc} className={styles.images}\r\n                                     alt={''}/>\r\n                                <div\r\n                                    className={styles.customerImageName}>{!!user.username ? user.username : `No user name`}</div>\r\n                                <div className={styles.customerImageName}>id: {user.id}</div>\r\n                            </Col>\r\n                            <Col xs=\"auto\" md=\"auto\" lg=\"auto\" className={styles.customerInfo}>\r\n                                {!!user.first_name ? user.first_name : `No first name`} {!!user.last_name ? user.last_name : `No last name`}\r\n                                <div className={!!user.is_active ? styles.active : styles.notActive}>\r\n                                    <Icon.CircleFill size={20}\r\n                                                     style={{'padding': '5px'}}/>{!!user.is_active ? 'Online' : 'Offline'}\r\n                                </div>\r\n                                <div>\r\n                                    {!!user.is_superuser && <div className={styles.superUser}>Super user</div>}\r\n                                </div>\r\n                            </Col>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n\r\n            </Container>\r\n        )}\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users\r\n\r\n\r\n\r\n\r\n\r\n","import {Redirect, Route, Switch} from 'react-router'\r\nimport LoginPage from '../LoginPage/LoginPage'\r\nimport Users from '../Users/Users'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nconst MainRouter = (props) => {\r\n    const verifyToken = !!localStorage.getItem('Token') || props.token\r\n\r\n    return <Switch>\r\n        <Route exact path='/' render={() => <Redirect to='/login'/>}/>\r\n        <Route path='/login' render={() => <LoginPage/>}/>\r\n        <Route path='/users' render={() => verifyToken ? <Users/> : <Redirect to='/login'/>}/>\r\n        <Route path=\"*\" render={() => <div>404 PAGE IS NOT FOUND</div>}/>\r\n    </Switch>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainRouter)","import './App.css'\r\nimport React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport store from './redux/redux-store'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {history} from './history'\r\nimport MainRouter from './components/MainRouter/MainRouter'\r\nimport {Router} from 'react-router'\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router history={history}>\r\n                <MainRouter/>\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"LoginPage_errorText__3CDW7\",\"toggleSpinner\":\"LoginPage_toggleSpinner__3F_Ho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"Users_images__GtCty\",\"customer\":\"Users_customer__334XO\",\"customerImageName\":\"Users_customerImageName__1J5z0\",\"active\":\"Users_active__2o_Xt\",\"notActive\":\"Users_notActive__1S2P5\",\"activeStatus\":\"Users_activeStatus__3DLyd\",\"customerInfo\":\"Users_customerInfo__1Gfgg\",\"superUser\":\"Users_superUser__ve9ns\",\"usersFilterForm\":\"Users_usersFilterForm__BPEKr\",\"usersFilterFormColumn\":\"Users_usersFilterFormColumn__3cSbF\",\"usersFilterFormLabel\":\"Users_usersFilterFormLabel__1G7sB\",\"usersFilterGroup\":\"Users_usersFilterGroup__25IRT\",\"filtersLabel\":\"Users_filtersLabel__lFY_m\"};","module.exports = {\r\n    sortOptions: {\r\n        increaseId: 'increase',\r\n        decreaseId: 'increase'\r\n    },\r\n    filterOptions: {\r\n        username: 'username',\r\n        id: 'ID'\r\n    },\r\n    requiredField: 'Field is required',\r\n    defaultAvatarSrc: 'https://www.w3schools.com/howto/img_avatar.png'\r\n}"],"sourceRoot":""}