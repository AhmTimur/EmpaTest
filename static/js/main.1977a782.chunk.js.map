{"version":3,"sources":["components/Users/Users.module.css","constants/constants.js","reportWebVitals.js","api/api.js","api/auth-api.js","redux/auth-reducer.js","api/users-api.js","redux/users-reducer.js","redux/redux-store.js","history.js","components/LoginPage/LoginPage.js","components/Users/Users.js","components/MainRouter/MainRouter.js","App.js","index.js","components/LoginPage/LoginPage.module.css"],"names":["module","exports","sortOptions","increaseId","decreaseId","filterOptions","username","id","requiredField","defaultAvatarSrc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","API_TOKEN_AUTH","LOG_OUT","authToken","password","dispatch","post","res","localStorage","setItem","data","token","type","payload","initialState","isAuth","logOut","usersAPI","getToken","getItem","method","url","headers","Authorization","accept","catch","error","console","log","SET_USERS","CHANGE_USERS_ARRAY","initialValues","users","filterUsers","filter","filterType","sortType","usersRequest","a","rootReducer","combineReducers","auth","state","action","removeItem","usersPage","usersArray","filteredUsers","length","x","includes","toString","indexOf","slice","sort","b","store","createStore","applyMiddleware","thunkMiddleware","history","createHashHistory","connect","bindActionCreators","props","validationSchema","Yup","required","min","useEffect","push","Container","Row","style","className","Col","lg","enableReinitialize","onSubmit","values","setSubmitting","isFetching","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Form","Group","Label","name","onChange","onBlur","value","styles","errorText","Button","disabled","Users","submit","filterOption","sortOption","this","prevProps","prevState","snapshot","listen","location","usersFilterForm","sm","md","usersFilterFormColumn","usersFilterGroup","as","hidden","placeholder","map","user","usersContainer","customer","xs","src","images","alt","customerImageName","customerInfo","first_name","last_name","is_active","active","notActive","size","is_superuser","superUser","Component","verifyToken","exact","path","render","to","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1977a782.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"Users_images__1jz2J\",\"customer\":\"Users_customer__15DTh\",\"customerImageName\":\"Users_customerImageName__3sQKS\",\"active\":\"Users_active__3EToL\",\"notActive\":\"Users_notActive__2f5Ry\",\"activeStatus\":\"Users_activeStatus__2Ye1Q\",\"customerInfo\":\"Users_customerInfo__PsXn6\",\"superUser\":\"Users_superUser__Oitlh\",\"usersFilterForm\":\"Users_usersFilterForm__2-eam\",\"usersFilterFormColumn\":\"Users_usersFilterFormColumn__kKwh4\",\"usersFilterFormLabel\":\"Users_usersFilterFormLabel__HtrJ9\",\"usersFilterGroup\":\"Users_usersFilterGroup__3GI8-\",\"filtersLabel\":\"Users_filtersLabel__2Tzua\"};","module.exports = {\r\n    sortOptions: {\r\n        increaseId: 'increase',\r\n        decreaseId: 'decrease'\r\n    },\r\n    filterOptions: {\r\n        username: 'username',\r\n        id: 'ID'\r\n    },\r\n    requiredField: 'Field is required',\r\n    defaultAvatarSrc: 'https://www.w3schools.com/howto/img_avatar.png'\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://fathomless-ocean-00302.herokuapp.com/http://emphasoft-test-assignment.herokuapp.com/',\r\n    //Использовал прокси для избавления от блокировки запроса на gh-pages\r\n})","import {instance} from './api'\r\n\r\nexport const API_TOKEN_AUTH = 'API_TOKEN_AUTH'\r\nexport const LOG_OUT = 'LOG_OUT'\r\n\r\nexport const authToken = (username, password) => {\r\n    return (dispatch) => {instance.post(`api-token-auth/`, {username, password})\r\n        .then((res) => {localStorage.setItem('Token', res.data.token)\r\n                        dispatch({type: API_TOKEN_AUTH, payload: res.data})\r\n        })}\r\n}\r\n\r\n","import {API_TOKEN_AUTH, LOG_OUT} from \"../api/auth-api\";\r\n\r\nconst initialState = {\r\n    token: '',\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case API_TOKEN_AUTH:\r\n            return {\r\n                ...state,\r\n                token: action.payload.token,\r\n                isAuth: true\r\n            };\r\n        case LOG_OUT:\r\n            console.log('logout')\r\n            localStorage.removeItem('Token')\r\n            return {\r\n                ...state,\r\n                isAuth: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const logOut = () => ({\r\n    type: LOG_OUT\r\n})\r\n\r\n","import {instance} from \"./api\";\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(token) {\r\n        const getToken = !!token ? token : localStorage.getItem('Token')\r\n        return instance({\r\n            method: 'get',\r\n            url: 'api/v1/users/',\r\n            headers: {Authorization: `Token ${getToken}`, accept: \"application/json\"}\r\n        }).then(res => res.data).catch(error => console.log(error))\r\n        }\r\n}","import {usersAPI} from \"../api/users-api\"\r\nimport {sortOptions, filterOptions} from \"../constants/constants\";\r\n\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const CHANGE_USERS_ARRAY = 'CHANGE_USERS_ARRAY'\r\n\r\nconst initialValues = {\r\n    users: []\r\n}\r\n\r\nexport const usersReducer = (state = initialValues, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return  {\r\n            ...state,\r\n            usersArray: action.users,\r\n            users: action.users\r\n        };\r\n        case CHANGE_USERS_ARRAY:\r\n            let filteredUsers = state.users\r\n            if(action.filter.length > 0 ) {\r\n                if(action.filterType === filterOptions.username) {\r\n                    filteredUsers = state.users.filter(x => x.username.includes(action.filter))\r\n                } else if(action.filterType === filterOptions.id) {\r\n                    filteredUsers = state.users.filter(x => x.id.toString().indexOf(action.filter.toString()) > -1)\r\n                }\r\n            }\r\n            if(action.sortType === sortOptions.increaseId) {\r\n                filteredUsers = filteredUsers.slice().sort((a, b)=>{\r\n                    return a.id - b.id\r\n                })\r\n            } else if(action.sortType === sortOptions.decreaseId) {\r\n                filteredUsers = filteredUsers.slice().sort((a, b)=>{\r\n                    return b.id - a.id\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                usersArray: filteredUsers\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS, users\r\n})\r\n\r\nexport const filterUsers = (filter, filterType, sortType) => ({\r\n    type: CHANGE_USERS_ARRAY, filter, filterType, sortType\r\n})\r\n\r\nexport const usersRequest = (token) => async (dispatch) => {\r\n    let data = await usersAPI.getUsers(token)\r\n    dispatch(setUsers(data))\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {usersReducer} from \"./users-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    usersPage: usersReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store","import { createHashHistory } from 'history';\r\n\r\nexport const history = createHashHistory()","import {Field, Formik} from \"formik\";\r\nimport React, {useEffect} from \"react\";\r\nimport {authToken} from \"../../api/auth-api\";\r\nimport * as Yup from 'yup'\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Button, Col, Container, Row, Form} from \"react-bootstrap\";\r\nimport styles from './LoginPage.module.css'\r\nimport {requiredField} from \"../../constants/constants\";\r\nimport {history} from './../../history'\r\n\r\nconst LoginPage = (props) => {\r\n    const stringMinLength = 5\r\n\r\n    const submit = (values, { setSubmitting }) => {\r\n        props.authToken(values.username, values.password)\r\n        props.isFetching = true\r\n        setSubmitting(false)\r\n    }\r\n    const validationSchema = Yup.object({\r\n        username: Yup.string().required(requiredField).min(stringMinLength, 'This field must include at least ' + stringMinLength + ' character'),\r\n        password: Yup.string().required(requiredField).min(stringMinLength, 'This field must include at least ' + stringMinLength + ' character')\r\n    })\r\n    useEffect(()=> {\r\n        if(props.isAuth) {\r\n            console.log('login', props.isAuth)\r\n            history.push('/users')\r\n            // return <Redirect to='/users'/>\r\n        }\r\n    }, [props.isAuth])\r\n    return (\r\n        <Container>\r\n            <Row style={{'height' : '100vh'}} className={['justify-content-center', 'align-items-center']}>\r\n                <div className=\"shadow p-3 mb-5 bg-white rounded\">\r\n                <Col lg=\"auto\" style={{'textAlign': 'center'}}>\r\n                    <Formik\r\n                        enableReinitialize\r\n                        initialValues={{username: '', password: '' }}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={submit}>\r\n                        {({values, errors, touched,\r\n                           handleChange, handleBlur,\r\n                           handleSubmit,  isSubmitting}) => (\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group>\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <Field\r\n                                        type=\"username\"\r\n                                        name=\"username\"\r\n                                        className='form-control'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.username}\r\n                                    />\r\n                                </Form.Group>\r\n                                <p className={styles.errorText}>{errors.username && touched.username && errors.username}</p>\r\n                                <Form.Group>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Field\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        className='form-control'\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.password}\r\n                                    />\r\n                                </Form.Group>\r\n                                <p className={styles.errorText}>{errors.password && touched.password && errors.password}</p>\r\n                                <div>\r\n                                    <Button type=\"submit\" disabled={isSubmitting}>\r\n                                        Log In\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Col>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({authToken}, dispatch)\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {filterUsers, usersRequest} from \"../../redux/users-reducer\"\r\nimport {bindActionCreators} from \"redux\"\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\"\r\nimport styles from './Users.module.css'\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport {Field, Formik} from \"formik\"\r\nimport {filterOptions, sortOptions, defaultAvatarSrc} from \"../../constants/constants\"\r\nimport {logOut} from \"../../redux/auth-reducer\"\r\nimport {history} from \"./../../history\"\r\n\r\n\r\nclass Users extends Component {\r\n    componentDidMount() {\r\n        this.props.usersRequest(this.props.token)\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(history)\r\n        history.listen((location, action) => {\r\n            if(action === 'POP') {\r\n                this.props.logOut()\r\n                history.push('/login')\r\n            }\r\n        })\r\n    }\r\n\r\n    submit = (values, {setSubmitting}) => {\r\n        this.props.filterUsers(values.filter, values.filterOption, values.sortOption)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    render() {\r\n        const {users} = this.props\r\n\r\n        return <div>\r\n            <Row className={styles.usersFilterForm}>\r\n                <Col sm=\"auto\" md=\"auto\" lg=\"auto\" className={styles.usersFilterFormColumn}>\r\n                    <Formik enableReinitialize\r\n                            initialValues={{filter: ''}}\r\n                            onSubmit={this.submit}>\r\n                        {({\r\n                              values, handleChange, handleBlur,\r\n                              handleSubmit, isSubmitting\r\n                          }) => (\r\n                            <Form onSubmit={handleSubmit} className={styles.usersFilterGroup}>\r\n                                <Field as=\"select\" className={'form-control'} name=\"filterOption\">\r\n                                    <option hidden>Filter by:</option>\r\n                                    <option value={filterOptions.username}>Username</option>\r\n                                    <option value={filterOptions.id}>Id</option>\r\n                                </Field>\r\n                                <Field type=\"text\"\r\n                                       name=\"filter\"\r\n                                       placeholder=\"Enter filter text\"\r\n                                       className='form-control'\r\n                                       onChange={handleChange}\r\n                                       onBlur={handleBlur}\r\n                                       value={values.filter}/>\r\n                                <Field as=\"select\" className='form-control' name=\"sortOption\">\r\n                                    <option hidden>Sort by:</option>\r\n                                    <option value=\"none\">None</option>\r\n                                    <option value={sortOptions.increaseId}>Increasing Id</option>\r\n                                    <option value={sortOptions.decreaseId}>Decreasing Id</option>\r\n                                </Field>\r\n                                <Button type=\"submit\" disabled={isSubmitting}>Apply</Button>\r\n                            </Form>)}\r\n                    </Formik>\r\n                </Col>\r\n            </Row>\r\n            {!!users && users.map(user =>\r\n                <Container key={user.id} className={styles.usersContainer}>\r\n                    <div className={styles.usersFilterFormColumn}>\r\n                        <Row className={styles.customer} sm=\"auto\" md=\"auto\" lg=\"auto\">\r\n                            <Col className={`shadow p-3 mb-2 bg-light rounded ${styles.usersFilterGroup}`}>\r\n                                <Col xs=\"4\" md=\"auto\" lg=\"auto\">\r\n                                    <img src={defaultAvatarSrc} className={styles.images}\r\n                                         alt={''}/>                                    <div\r\n                                        className={styles.customerImageName}>{!!user.username ? user.username : `No user name`}</div>\r\n                                    <div className={styles.customerImageName}>id: {user.id}</div>\r\n                                </Col>\r\n                                <Col xs=\"auto\" md=\"auto\" lg=\"auto\" className={styles.customerInfo}>\r\n                                    {!!user.first_name ? user.first_name : `No first name`} {!!user.last_name ? user.last_name : `No last name`}\r\n                                    <div className={!!user.is_active ? styles.active : styles.notActive}>\r\n                                        <Icon.CircleFill size={20}\r\n                                                         style={{'padding': '5px'}}/>{!!user.is_active ? 'Online' : 'Offline'}\r\n                                    </div>\r\n                                    <div>\r\n                                        {!!user.is_superuser ? <div className={styles.superUser}>Super user</div> :\r\n                                            <div></div>}\r\n                                    </div>\r\n                                </Col>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </div>\r\n\r\n                </Container>\r\n            )}\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({usersRequest, filterUsers, logOut}, dispatch)\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token,\r\n    users: state.usersPage.usersArray\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)\r\n\r\n\r\n\r\n\r\n\r\n","import {Redirect, Route, Switch} from \"react-router\";\r\nimport LoginPage from \"../LoginPage/LoginPage\";\r\nimport Users from \"../Users/Users\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst MainRouter = (props) => {\r\n    const verifyToken = !!localStorage.getItem('Token') || props.token\r\n\r\n    return <Switch>\r\n        <Route exact path='/' render={()=> <Redirect to='/login'/> }/>\r\n        <Route path='/login' render={()=> <LoginPage/> }/>\r\n        <Route path='/users' render={()=> verifyToken ? <Users/> : <Redirect to='/login'/>}/>\r\n        <Route path=\"*\" render={() => <div>404 PAGE IS NOT FOUND</div>}/>\r\n    </Switch>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainRouter)","import './App.css'\r\nimport React from 'react'\r\nimport {Provider} from \"react-redux\"\r\nimport store from \"./redux/redux-store\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {history} from \"./history\";\r\nimport MainRouter from \"./components/MainRouter/MainRouter\";\r\nimport {Router} from \"react-router\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Router history={history}>\r\n                <MainRouter />\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"LoginPage_errorText__2olkr\"};"],"sourceRoot":""}